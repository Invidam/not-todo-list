<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="repository.UserMapper">

    <resultMap id="UserResultMap" type="domain.User">
        <result property="id" column="id" />
        <result property="account" column="account" />
        <result property="password" column="password" />
        <result property="nickname" column="nickname" />
        <result property="isDeleted" column="is_deleted" />
<!--        <result propertyyyyyhhhhhhhhh="createdAt" column="created_at" />-->
    </resultMap>
    <insert id="createUser" parameterType="domain.User">
        INSERT INTO user (account, password,nickname,created_at,is_deleted) VALUES(#{account},#{password},#{nickname},now(),#{isDeleted})
    </insert>
    <select id="getUserById" parameterType="Long" resultMap="UserResultMap">
        SELECT id, account, password,nickname,created_at,is_deleted FROM user WHERE id=#{id}
    </select>

    <select id="getUserInLogin" parameterType="domain.User" resultMap="UserResultMap">
        SELECT id, account, password,nickname,created_at,is_deleted FROM user WHERE account = #{account} and password = #{password}
    </select>
    <update id="updateUser" parameterType="domain.User">
        UPDATE user SET account = #{account},  password = #{password},  nickname =#{nickname} WHERE id =#{id}
    </update>

    <update id="withdrawUser" parameterType="Long">
        UPDATE user SET is_deleted = true WHERE id =#{id}
    </update>


    <delete id="deleteUserById" parameterType="Long">
        DELETE FROM user WHERE id=#{id}
    </delete>
</mapper>
