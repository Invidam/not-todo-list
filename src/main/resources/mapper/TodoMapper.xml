<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="repository.TodoMapper">
    <resultMap id="UserInfoResultMap" type="DTO.User.UserInfoDTO">
<!--        <collection property="userInfoDTOList" javaType="list" ofType="DTO.User.UserInfoDTO">-->
            <result property="id" column="user_id" />
            <result property="nickname" column="user_nickname" />
<!--        </collection>-->
    </resultMap>
    <resultMap id="EmotionInItemResultMap" type="DTO.Emotion.EmotionInItemDTO">
<!--        <collection property="itemEmotionList" javaType="list" ofType="DTO.Emotion.EmotionInItemDTO">-->
            <result property="emotionId" column="emotion_id" />
            <collection property="userInfoList" resultMap="UserInfoResultMap"/>
<!--        </collection>-->
    </resultMap>
    <resultMap id="ItemResultMap" type="DTO.Item.ItemInfoDTO">
        <id property="id" column="id"/>
        <result property="title" column="title" />
        <result property="priority" column="priority" />
        <result property="createdAt" column="created_at" />
        <result property="editedAt" column="edited_at" />
        <result property="deadline" column="deadline" />
        <result property="description" column="description" />
        <result property="isEdited" column="is_edited" />
        <result property="isShared" column="is_shared" />
        <result property="isDeleted" column="is_deleted" />
        <collection property="owner" resultMap="UserInfoResultMap"/>
        <collection property="hashTagList" javaType="list" ofType="java.lang.String">
            <result column="hash_tags" />
        </collection>
        <collection property="itemEmotionList" resultMap="EmotionInItemResultMap"/>
    </resultMap>
        <select id="getHashTagById" parameterType="long" resultType="String">
            SELECT hash_tag_name WHERE id = #{id}
        </select>
        <select id="findHashTagId" parameterType="String" resultType="long">
            SELECT id FROM hash_tag WHERE hash_tag_name = #{hashTag}
        </select>
        <select id="isExistHashTag" parameterType="String" resultType="boolean">
            SELECT IF(COUNT(*) != 0, 1, 0) FROM hash_tag WHERE hash_tag_name = #{hashTag}
        </select>
        <select id="isExistHashTagRelationship" parameterType="DTO.Item.ItemIdAndHashTagIdDTO" resultType="boolean">
            SELECT IF(COUNT(*) != 0, 1, 0) FROM item_hash_tag WHERE hash_tag_id = #{hashTagId} and item_id = #{itemId}
        </select>
        <select id="isExistItem" parameterType="long" resultType="boolean">
            SELECT IF(COUNT(*) != 0, 1, 0) FROM item WHERE id=#{id} and (is_deleted = false or is_deleted is null)
        </select>
        <insert id="createHashTag" parameterType="String">
            INSERT INTO hash_tag (hash_tag_name) VALUES(#{hashTag})
        </insert>

        <insert id="createHashTagsRelationship" parameterType="DTO.Item.ItemIdAndHashTagIdDTO">
            INSERT INTO item_hash_tag (item_id, hash_tag_id) VALUES(#{itemId}, #{hashTagId})
        </insert>

        <select id="getItemOwnerIdById" parameterType="long" resultType="long">
            SELECT user_id FROM item WHERE id = #{id}
        </select>

        <insert id="createItem" parameterType="domain.Item">
            INSERT INTO item (user_id, title, priority, created_at, deadline, description, is_done) VALUES(#{userId}, #{title},#{priority},now(),#{deadline}, #{description}, 0)
            <selectKey keyProperty="id" resultType="Long">
                SELECT LAST_INSERT_ID()
            </selectKey>
        </insert>
        <select id="getItemInfoById" resultMap="ItemResultMap" parameterType="long">
            SELECT i.id, i.user_id, i.title, i.priority, i.created_at, i.edited_at, i.deadline, i.description, i.is_done, i.is_edited, i.is_shared, i.is_deleted ,
                h.hash_tag_name as hash_tags,
                ie.emotion_id as emotion_id,
                u.id as user_id, u.nickname as user_nickname
            FROM (SELECT * FROM item WHERE id = #{id}) i
            LEFT JOIN item_hash_tag AS ih ON  i.id = ih.item_id
            LEFT JOIN hash_tag AS h ON h.id = ih.hash_tag_id
            LEFT JOIN item_emotion AS ie ON i.id = ie.item_id
            LEFT JOIN user AS u ON u.id = i.user_id
        </select>
        <update id="updateItem" parameterType="domain.Item">
            UPDATE item SET title = #{title}, priority= #{priority}, deadline = #{deadline},edited_at = now() ,description=#{description} , is_done = #{isDone} , is_edited = 1 WHERE id =#{id}
        </update>
        <delete id="deleteItem" parameterType="long">
            UPDATE item SET is_deleted = true WHERE id =#{id}
        </delete>
        <select id="getInsertedItemId" resultType="long">
            SELECT LAST_INSERT_ID()
        </select>
        <update id="updateItemStatus" parameterType="DTO.Item.ItemIdAndIsDoneDTO">
            UPDATE item SET is_done = #{isDone}  WHERE id =#{id}
        </update>

</mapper>
